// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"attribute highp vec4  inVertex;\r\n"
	"attribute highp vec3  inNormal;\r\n"
	"attribute highp vec2  inTexCoord;\r\n"
	"\r\n"
	"uniform highp   mat4  MVPMatrix;\r\n"
	"uniform highp   mat4  ModelViewMatrix;\r\n"
	"uniform highp vec3  LightDirection;\r\n"
	"// fog uniforms\r\n"
	"uniform lowp    int    iFogMode;\r\n"
	"uniform highp float  FogDensity;\r\n"
	"uniform highp float  FogEnd;\r\n"
	"uniform highp float  FogRcpEndStartDiff;\r\n"
	"\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"varying lowp    vec3  DiffuseLight;\r\n"
	"varying lowp    vec3  FogIntensity;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// transform position to view space as we need the distance to the eye for fog\r\n"
	"\thighp vec3 viewPos = vec3(ModelViewMatrix * inVertex);\r\n"
	"\thighp float eyeDist = length(viewPos);\r\n"
	"\t\r\n"
	"\t// transform vertex position\r\n"
	"\tgl_Position = MVPMatrix * inVertex;\r\n"
	"\t\r\n"
	"\t// texcoords pass through\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"\r\n"
	"\t// calculate lighting\r\n"
	"\t// We use a directional light with direction given in model space\r\n"
	"\tlowp float DiffuseIntensity = dot(inNormal, normalize(LightDirection));\r\n"
	"\t\r\n"
	"\t// clamp negative values and add some ambient light\r\n"
	"\tDiffuseLight = vec3(max(DiffuseIntensity, 0.0) * 0.5 + 0.5);\r\n"
	"\r\n"
	"\t\r\n"
	"\t// select fog function. 1 is linear, 2 is exponential, 3 is exponential squared, 0 is no fog.\r\n"
	"\thighp float fogIntensity = 1.0;\r\n"
	"\tif(iFogMode == 1)\r\n"
	"\t{\r\n"
	"\t\tfogIntensity = (FogEnd - eyeDist) * FogRcpEndStartDiff;\r\n"
	"\t}\r\n"
	"\telse if(iFogMode >= 2)\r\n"
	"\t{\r\n"
	"\t\thighp float scaledDist = eyeDist * FogDensity;\r\n"
	"\t\tif (iFogMode == 3)\r\n"
	"\t\t{\r\n"
	"\t\t\tscaledDist *= scaledDist;\r\n"
	"\t\t}\r\n"
	"\t\tfogIntensity = exp2(-scaledDist);\r\n"
	"\r\n"
	"\t}\r\n"
	"\r\n"
	"\t// clamp the intensity within a valid range\r\n"
	"\tFogIntensity = vec3(clamp(fogIntensity, 0.0, 1.0));\r\n"
	"}\r\n";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 1604);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0xc7787734,0x35050100,0x901,0xf121629f,0x0,0x0,0x55070000,0x0,0x4000200,0x0,0x39000000,0x20303,0x0,0x1010000,0x2,0x0,0x48040000,0x55535020,0x17,0x43c,0x1,0x0,0xc,0x0,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x1000b,0x0,0x240000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x110000,0xffffffff,0x240000,0x5678000b,0x10000,0x20,0x10000,0x10021,0x10000,0x20022,0x10000,0x30033,0x10000,0x40000,0x10000,0x50001,0x10000,0x60002,0x10000,
0x70004,0x10000,0x80005,0x10000,0x90006,0x10000,0xa0008,0x10000,0xb0009,0x10000,0xc000a,0x10000,0xd000c,0x10000,0xe000d,0x10000,0xf000e,0x10000,0x100010,0x10000,0x110011,0x10000,0x120012,0x10000,0x130013,0x10000,0x140014,0x10000,0x150015,0x10000,0x160016,0x10000,0x170017,0x10000,0x180018,0x10000,0x190019,0x10000,0x1a001a,0x10000,0x1b001b,0x10000,0x1c001c,0x10000,0x1d001d,0x10000,0x1e001e,0x10000,0x1f001f,0x10000,0x20003b,0x10000,0x21003f,0x10000,0x220047,0x10000,0x23004b,0x73f0000,0x40000,0x110000,0x2,0x2,0x80018000,0x80048001,
0x0,0x0,0x4,0x10104,0xfa100000,0xb060001d,0x10a03001,0x2,0x3,0x80018001,0x80018001,0x0,0x0,0x4,0x1010000,0x101,0x200fa10,0x1001a140,0x50028a1,0x1002e080,0x228a1,0xa0000,0x80000000,0x80048001,0x8004,0x0,0x40000,0x0,0x0,0x0,0x0,0x4040000,0x1,0x530fa10,0x1006d081,0x45840081,0x1006e081,0x6000080,0x1002e0a0,0x46042881,0x1006e081,0x2000080,0x12428080,0x6300880,0x1006d0c1,0x1a000081,0x10006000,0x86b42883,0x1180d003,0xd9c4881,0x3205f020,0x210a8,0x140000,0x80010000,0x80008000,0x8001,0x0,0x50000,0x10001,0x10001,0x10001,0x10001,0x1,0x0,
0x10000,0x0,0x0,0x10000,0x100,0x81afa10,0x606f0e0,0x499e3898,0x606f0a0,0x8b223882,0x606f0a0,0xcca63882,0x206f0a0,0x70f38a2,0x605f000,0x48923898,0x606f000,0x8a153882,0x606f000,0xcb983882,0x206f000,0x8138a2,0x1406f000,0x42800083,0x1006a0a1,0x2800080,0x124280a0,0x2800880,0x10028020,0x50b0880,0x606f001,0x440938ab,0xc006a002,0x830038a0,0x1006a002,0x300080,0x12029000,0x70e1881,0x10055080,0x2000083,0x100160a0,0x552b28a1,0x1284f000,0x30180,0x0,0x400000,0x12f900,0x2,0x1,0x80008001,0x80018000,0x0,0x0,0x86840000,0x1900d003,0x34881,0x0,0x400000,0x14fd00,0x2,0x4,0x80008001,0x80018000,0x0,
0x0,0x0,0x0,0xd0005630,0x811006,0xf00386ad,0x48801180,0x90000030,0x1811006,0x80000000,0x8801620,0x4,0x40014,0x120000,0x2,0x6,0x80008001,0x80018000,0x0,0x0,0x0,0x0,0x0,0x10000030,0x18811202,0x90e00034,0x18811001,0x61000380,0x28a11001,0x5001c730,0x831006,0x60200700,0x28831002,0x60404180,0x801005,0x6,0x5400,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f0000,0x0,0x0,0x0,0x803f0000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x803f0000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x400000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40400000,0x0,0x0,0x0,0x0,0x3f0000,0x3f0000,0x0,0x0,0xe000000,0x65646f4d,0x6569566c,0x74614d77,0x786972,0x3160000,0x10000,0x100,
0xffff10,0x566e6900,0x65747265,0x78,0x405,0x1000001,0x40000,0x6700000f,0x6f505f6c,0x69746973,0x6e6f,0x50501,0x100,0x4000001,0xf00,0x4d50564d,0x69727461,0x78,0x316,0x1000001,0xff101000,0x540000ff,0x6f437865,0x64726f,0x5030000,0x10000,0x8000100,0x30002,0x546e6900,0x6f437865,0x64726f,0x4030000,0x10000,0x4000100,0x30004,0x67694c00,0x69447468,0x74636572,0x6e6f69,0x3040000,0x10000,0x20000100,0x70004,0x4e6e6900,0x616d726f,0x6c,0x404,0x1000001,0x40800,0x44000007,0x75666669,0x694c6573,0x746867,0x5040000,0x10000,0x100,0x70003,0x6f466900,0x646f4d67,0x65,0x306,0x1000001,0x43300,0x46000001,
0x6e45676f,0x64,0x302,0x1000001,0x43b00,0x46000001,0x6352676f,0x646e4570,0x72617453,0x66694474,0x66,0x302,0x1000001,0x43f00,0x46000001,0x6544676f,0x7469736e,0x79,0x302,0x1000001,0x44700,0x46000001,0x6e49676f,0x736e6574,0x797469,0x5040000,0x10000,0x4000100,0x70003,0x0,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 1909);

// ******** End: VertShader.vsc ********

