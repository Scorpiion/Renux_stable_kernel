// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"/****************************************************************************\r\n"
	"* Vertex Shader\r\n"
	"* This code is for educational purposes, not optimized for performance.\r\n"
	"* For best performance, use different shaders for different light setups \r\n"
	"* and calculate lighting in model space.\r\n"
	"*\r\n"
	"* The use of several complex lights might significantly affect performance \r\n"
	"* on some mobile platforms.\r\n"
	"*\r\n"
	"* For fast transformation and lighting code, please see FastTnL example.\r\n"
	"*****************************************************************************/\r\n"
	"\r\n"
	"attribute highp vec3  inVertex; \r\n"
	"attribute highp vec3  inNormal;\r\n"
	"attribute highp vec2  inTexCoord;\r\n"
	"\r\n"
	"uniform highp mat4  MVPMatrix;\r\n"
	"uniform highp mat4  ModelView;\r\n"
	"uniform highp mat3  ModelViewIT;\r\n"
	"uniform lowp  int   iLightSel;\r\n"
	"uniform highp vec3  LightPosition;\r\n"
	"uniform highp vec3  LightDirection;\r\n"
	"uniform lowp  vec3  LightColor;\r\n"
	"\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"varying lowp    vec3  DiffuseLight;\r\n"
	"varying lowp    vec3  SpecularLight;\r\n"
	"\r\n"
	"const highp float  cShininess = 16.0;\r\n"
	"const highp float  cSpotCutoff = 0.9; \r\n"
	"const highp float  cSpotExp = 40.0;\r\n"
	"\r\n"
	"// General Blinn-Phong lighting function\r\n"
	"//\r\n"
	"// Calculated light is added to the varyings DiffuseLight and SpecularLight\r\n"
	"//\r\n"
	"void Lighting(bool bSpecular, highp vec3 normal, highp vec3 eyeDir, highp vec3 lightDir, lowp vec3 lightColor)\r\n"
	"{\r\n"
	"\tlowp float NdotL = max(dot(normal, lightDir), 0.0);\r\n"
	"\tDiffuseLight += NdotL * lightColor;\r\n"
	"\t\r\n"
	"\tif (bSpecular && NdotL > 0.0)\r\n"
	"\t{\r\n"
	"\t\thighp vec3 halfVector = normalize(lightDir + eyeDir);\r\n"
	"\t\thighp float NdotH = max(dot(normal, halfVector), 0.0);\t\t\r\n"
	"\t\thighp float specular = pow(NdotH, cShininess);\r\n"
	"\t\tSpecularLight += specular * lightColor;\r\n"
	"\t}\t\r\n"
	"}\r\n"
	"\r\n"
	"void DirectionalLight(bool bSpecular, highp vec3 normal, highp vec3 vertexPos)\r\n"
	"{\r\n"
	"\t// eye direction is the normalized inverse of the vertex position in eye space\r\n"
	"\thighp vec3 eyeDir = -normalize(vertexPos);\r\n"
	"\t\r\n"
	"\tLighting(bSpecular, normal, eyeDir, LightDirection, LightColor);\r\n"
	"}\r\n"
	"\r\n"
	"void PointLight(bool bSpecular, highp vec3 normal, highp vec3 vertexPos)\r\n"
	"{\r\n"
	"\t// calculate normalized light direction\r\n"
	"\thighp vec3 lightDir = -normalize(vertexPos - LightPosition);\r\n"
	"\t\r\n"
	"\t// eye direction is the normalized inverse of the vertex position in eye space\r\n"
	"\thighp vec3 eyeDir = -normalize(vertexPos);\r\n"
	"\t\r\n"
	"\tLighting(bSpecular, normal, eyeDir, lightDir, LightColor);\r\n"
	"}\r\n"
	"\r\n"
	"void SpotLight(bool bSpecular, highp vec3 normal, highp vec3 vertexPos)\r\n"
	"{\r\n"
	"\t// calculate normalized light direction\r\n"
	"\thighp vec3 lightDir = -normalize(vertexPos - LightPosition);\r\n"
	"\t\r\n"
	"\t// eye direction is the normalized inverse of the vertex position in eye space\r\n"
	"\thighp vec3 eyeDir = -normalize(vertexPos);\r\n"
	"\t\r\n"
	"\t// LightDirection is spot direction here\r\n"
	"\thighp float spotDot = dot(lightDir, LightDirection);\r\n"
	"\thighp float attenuation = 0.0;\r\n"
	"\tif (spotDot > cSpotCutoff)\r\n"
	"\t{\r\n"
	"\t\tattenuation = pow(spotDot, cSpotExp);\r\n"
	"\t}\r\n"
	"\t\r\n"
	"\tLighting(bSpecular, normal, eyeDir, lightDir, attenuation * LightColor);\r\n"
	"}\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// transform normal to eye space\r\n"
	"\thighp vec3 normal = normalize(ModelViewIT * inNormal);\r\n"
	"\t\r\n"
	"\t// transform vertex position to eye space\r\n"
	"\thighp vec3 ecPosition = vec3(ModelView * vec4(inVertex, 1.0));\r\n"
	"\t\r\n"
	"\t// initalize light intensity varyings\r\n"
	"\tDiffuseLight = vec3(0.0);\r\n"
	"\tSpecularLight = vec3(0.0);\r\n"
	"\t\r\n"
	"\t// select the light function\r\n"
	"\tif (iLightSel == 0)\t\t\tDirectionalLight(false, normal, ecPosition);\r\n"
	"\telse if (iLightSel == 1)\tDirectionalLight(true, normal, ecPosition);\r\n"
	"\telse if (iLightSel == 2)\tPointLight(false, normal, ecPosition);\r\n"
	"\telse if (iLightSel == 3)\tPointLight(true, normal, ecPosition);\r\n"
	"\telse if (iLightSel == 4)\tSpotLight(false, normal, ecPosition);\r\n"
	"\telse \t\t\t\t\t\tSpotLight(true, normal, ecPosition);\r\n"
	"\t\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * vec4(inVertex, 1.0);\r\n"
	"\t\r\n"
	"\t// Pass through texcoords\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"}";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 3859);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0x44a94180,0x35050100,0x901,0xf121629f,0x0,0x0,0x63110000,0x0,0x4000200,0x0,0x39000000,0x20303,0x0,0x1010000,0x2,0x0,0x8a0d0000,0x55535020,0x17,0xd7e,0x1,0x0,0xc,0x4,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x15000a,0x0,0x330000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x150000,0xffffffff,0x330000,0x5678000a,0x10000,0x2b,0x10000,0x10074,0x10000,0x20075,0x10000,0x30076,0x10000,0x40070,0x10000,0x50071,0x10000,0x60072,0x10000,
0x70078,0x10000,0x80079,0x10000,0x9007a,0x10000,0xa0000,0x10000,0xb0001,0x10000,0xc0002,0x10000,0xd0004,0x10000,0xe0005,0x10000,0xf0006,0x10000,0x100008,0x10000,0x110009,0x10000,0x12000a,0x10000,0x130010,0x10000,0x140011,0x10000,0x150012,0x10000,0x160014,0x10000,0x170015,0x10000,0x180016,0x10000,0x190018,0x10000,0x1a0019,0x10000,0x1b001a,0x10000,0x1c001c,0x10000,0x1d001d,0x10000,0x1e001e,0x10000,0x1f0048,0x10000,0x200049,0x10000,0x21004a,0x10000,0x22004b,0x10000,0x23004c,0x10000,0x24004d,0x10000,0x25004e,0x10000,0x26004f,0x10000,
0x270050,0x10000,0x280051,0x10000,0x290052,0x10000,0x2a0053,0x10000,0x2b0054,0x10000,0x2c0055,0x10000,0x2d0056,0x10000,0x2e0057,0x10000,0x2f0043,0x10000,0x300083,0x10000,0x310087,0x40000,0x0,0x32,0x377,0x4,0x20001,0x10000,0x80010000,0x80008001,0x8001,0x0,0x40000,0xe00000,0xf8000102,0x2,0x6,0x80018001,0x80018000,0x0,0x0,0x0,0x0,0x0,0xc204,0x801402,0x20014280,0x801002,0x80400000,0x8801242,0x90014130,0x811002,0x51601a30,0x831084,0xa2000080,0x28811000,0x2,0x3,0x80018001,0x80018001,0x0,0x0,0x4,0x1010000,
0x101,0xfa10,0x20002220,0x70028a1,0x2000e000,0x228a1,0x20000,0x80ff0000,0x80018001,0x8001,0x0,0x40000,0x1010000,0xff01,0x580fa10,0x1000e1e0,0x228a1,0x50000,0x80010000,0x80018001,0x8001,0x0,0x40000,0x0,0x1,0x1010101,0xfa100000,0xe2800680,0x28811000,0x8184,0x38ab0606,0xe0200000,0x28a31002,0x51805a30,0xa31084,0x3,0x0,0xf8000240,0x20004,0x10000,0x80000000,0x80008000,0x8000,0x0,0x40000,0x80000380,0xf80000c0,0x3,0x0,0xf8000080,0x4ffff,0x20000,0x2,0x4,0x80018001,0x80018000,0x0,0x0,0x0,0x0,0xc204,0x801402,0x20014280,0x801002,
0x80400000,0x8801242,0xa2000080,0x28811000,0x2,0x2,0x80018001,0x80018001,0x0,0x0,0x4,0x1010101,0xfa100000,0x22200000,0x28a12000,0x2,0x2,0x800180ff,0x80018001,0x0,0x0,0x4,0xff010101,0xfa100000,0xe1e00580,0x28a11000,0x2,0x6,0x80018001,0x80008000,0x0,0x0,0x4,0x10000,0x10001,0x1010000,0xfa100000,0xe2800680,0x28811000,0xe0c0c882,0x38ab0220,0xe0010902,0x389f0622,0xe0200080,0x28831002,0x51801a30,0xa31084,0x2,0xc,0x80018001,0x80018001,0x0,0x0,0x10005,0x10001,0x10001,0x10001,0x10001,0x0,0x1010101,0xfa100000,0xe0e14982,0x388f0620,0xe1000000,
0x28831000,0x218387,0x801402,0x20220401,0x801002,0x80600080,0x8801242,0x904201b0,0x811002,0x50409a30,0x831084,0x60c307,0x38980606,0xe1200000,0x28a31000,0x5160da30,0x831084,0x50025a30,0xa31080,0x3,0x0,0xf8000240,0x30004,0x0,0x800000,0xfffff800,0x4,0x20003,0x80000,0x80010000,0x80008001,0x8001,0x0,0x0,0x0,0x0,0x10001,0xc2040001,0x14020000,0x42800080,0x10022001,0x80,0x12428040,0x18000880,0x100260e0,0xc8822883,0x220e0c0,0x90238ab,0x622e001,0x80389f,0x1002e020,0x1a302883,0x10845060,0x200a3,0xc0000,0x80010000,0x80018001,0x8001,0x0,0x50000,0x10001,0x10001,0x10001,0x10001,
0x1,0x1010000,0x101,0x4982fa10,0x620e0e1,0x388f,0x1002e040,0x83872883,0x14020021,0x81010080,0x1006a000,0x80,0x12428060,0x81b00880,0x10069000,0x1a300081,0x108450a0,0xc3070083,0x6060040,0x3898,0x1000e100,0x9a3028a3,0x108450c0,0x1a300083,0x108050e2,0x200a3,0x20000,0x80000000,0x40ce40ce,0x8001,0x0,0x40000,0xce010000,0x600ce,0x28efa10,0x20023000,0x210a0,0x20000,0x80010000,0x80018001,0x8001,0x0,0x40000,0x1010000,0x101,0x803afa10,0x1a80b003,0x34880,0x0,0x400000,0x11fd00,0x2,0x3,0x80018001,0x80018001,0x0,0x0,0x0,0x0,0x14428000,0x1db00880,0x1006d000,0x81,0x160280e0,
0x40880,0x110000,0x2,0x3,0x80018001,0x80018001,0x0,0x0,0x0,0xc6b00000,0x1004d281,0x5000081,0x10002200,0x2881,0x20002220,0x228a1,0x20000,0x40890000,0x40f440f4,0x8001,0x0,0x40000,0xf4010000,0xe89f4,0x180fa10,0x20002160,0x228a1,0x30000,0x80010000,0x40ce40ce,0x8001,0x0,0x40000,0x0,0x1cece01,0xfa100006,0x20000280,0x28a12000,0xf001448c,0x38ab0606,0x2,0x2,0x800180ff,0x80018001,0x0,0x0,0x10005,0xff010101,0xfa100000,0xe1e00000,0x28a31000,0x3,0x0,0xf8000240,0x30004,0x0,0x800000,0xfffff800,0x4,0x20004,0x20000,0x80000000,0x80018001,0x8001,
0x0,0x40000,0x1010000,0x1,0x880fa10,0x20020000,0x210a0,0x60000,0x80010000,0x80ff8000,0x8001,0x0,0x40000,0x0,0x0,0xff010000,0x100,0x30fa10,0x12029000,0x7841881,0x10051080,0xa0600a0,0x100510c0,0x8300080,0x12801000,0x304881,0x1a809000,0x34981,0x0,0x400000,0x13fd00,0x2,0x3,0x80018001,0x40898000,0x0,0x0,0x4,0x890000,0x10101,0x1a0bfa10,0x20024020,0x410100a2,0x1406a000,0x20080,0xe0000,0x80010000,0x80018001,0x8001,0x0,0x40000,0x0,0x0,0x1,0x0,0x0,0x0,0x1010000,0x101,0xc180fa10,0x1006a000,0x80,0x12428000,0xc0300880,
0x10069060,0x820081,0x606a000,0x889238ab,0xc0020004,0xc18038a0,0x1002a004,0x300080,0x12029000,0x1881,0x14428000,0x3b00880,0x10065000,0x83,0x16028000,0x7870880,0x100510e0,0x7080080,0x10051100,0xa090080,0x10051120,0x40080,0x130000,0x2,0x1,0x80018001,0x80018001,0x0,0x0,0x1010004,0x101,0x3fa10,0x0,0x800000,0xfffff800,0x4,0x20015,0x30000,0x80000000,0x80018001,0x8003,0x0,0x40000,0x0,0x10103,0xfa100000,0xb0e00016,0x10a02002,0xb060021f,0x10a02002,0x2,0x3,0x80008001,0x80018000,0x0,0x0,0x4,0x10000,0x100,0xda28fa10,0x100470a0,0x18000082,0x50016080,0x228a3,
0xf0000,0x80010000,0x80008001,0x8001,0x0,0x40000,0x0,0x10001,0x10001,0x10001,0x10001,0x10001,0x1,0x1010001,0xfa100000,0xd0000530,0x48811180,0xf0000a15,0x38ab0606,0xf0004b98,0x38820606,0xf0008d1b,0x38a20606,0xf0000081,0x831406,0xa001c380,0x801006,0x80000000,0x8801242,0x9041c030,0x811004,0xb000003c,0x38a9c204,0xf0210e9e,0x38980604,0xf0015021,0x38820606,0xf00191a4,0x38a20206,0xe0200080,0x28831002,0x70601a26,0xa21004,0x3,0x0,0xfd000040,0x20016,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x60201800,0x28831002,0x3,0x0,0xf8000240,0x30001,0x0,0x400000,0x17f800,0x4,0x20016,
0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0xd0038534,0x48811180,0x3,0x0,0xfd000040,0x20018,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x60201a00,0x28831002,0x3,0x0,0xf8000240,0x30001,0x0,0x400000,0x19f800,0x4,0x20018,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0xd0038504,0x48811180,0x3,0x0,0xfd000040,0x2001a,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x60201800,0x28831002,0x3,0x0,0xf8000240,0x30002,0x0,0x400000,0x1bf800,0x4,0x2001a,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,
0xf0038539,0x48801180,0x3,0x0,0xfd000040,0x2001c,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x60201a00,0x28831002,0x3,0x0,0xf8000240,0x30002,0x0,0x400000,0x1df800,0x4,0x2001c,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0xd0038505,0x48811180,0x3,0x0,0xfd000040,0x2001e,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x61401800,0x28831000,0x3,0x0,0xf8000240,0x30003,0x0,0x400000,0x1ff800,0x4,0x2001e,0x10000,0x80010000,0x80008001,0x8001,0x0,0x0,0x61401a00,0x28831000,0x3,0x0,0xf8000240,0x40003,
0x1f0000,0x4,0x4001d,0x1b0000,0x4,0x40019,0x170000,0x2,0x1,0x80018001,0x80018001,0x0,0x0,0x4000000,0x1001a140,0x228a1,0xc0000,0x80000000,0x80048001,0x8004,0x0,0x40000,0x0,0x10001,0x10001,0x10001,0x0,0x4040000,0x1,0x700fa10,0x10026040,0x14aa2883,0x2206f001,0x1a3510a8,0x10057000,0x15ac0082,0x606f001,0x1a363898,0x10057020,0x57b00082,0x606f001,0x99b43882,0x206f001,0x8038a2,0x1002e020,0x1b8e2883,0x1206d000,0x5a380081,0x10057060,0x81800082,0x10056040,0x60080,0x88000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x803f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x803f,0x0,0x0,0x0,0x803f,0x0,0x0,0x0,0x40,0x0,0x0,0x0,0x4040,0x0,0x0,0x0,0x8040,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0x3f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8041,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6666663f,0x0,0x0,0x0,0x2042,0x6f4d0e00,0x566c6564,0x49776569,
0x54,0x312,0x1000001,0x70c0000,0x69000077,0x726f4e6e,0x6c616d,0x4040000,0x10000,0x100,0x70004,0x566e6900,0x65747265,0x78,0x404,0x1000001,0x40400,0x4d000007,0x6c65646f,0x77656956,0x16000000,0x1000003,0x10000,0xffff1010,0x69440000,0x73756666,0x67694c65,0x7468,0x50400,0x100,0x3000001,0x700,0x63657053,0x72616c75,0x6867694c,0x74,0x504,0x1000001,0x30400,0x69000007,0x6867694c,0x6c655374,0x6000000,0x1000003,0x10000,0x100042b,0x6c670000,0x736f505f,0x6f697469,0x100006e,0x505,0x1000001,0x40000,0x4d00000f,0x614d5056,0x78697274,0x16000000,0x1000003,0x10000,0xffff1048,0x65540000,0x6f6f4378,0x6472,0x50300,
0x100,0x2080001,0x300,0x65546e69,0x6f6f4378,0x6472,0x40300,0x100,0x4080001,0x300,0x6867694c,0x72694474,0x69746365,0x6e6f,0x30400,0x100,0x4700001,0x700,0x6867694c,0x6c6f4374,0x726f,0x30400,0x100,0x4740001,0x700,0x6867694c,0x736f5074,0x6f697469,0x6e,0x304,0x1000001,0x47800,0x7,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 4483);

// ******** End: VertShader.vsc ********

