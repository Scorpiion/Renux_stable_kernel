// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"attribute highp vec4  inVertex;\r\n"
	"attribute highp vec3  inNormal;\r\n"
	"attribute highp vec2  inTexCoord;\r\n"
	"attribute highp vec3  inTangent;\r\n"
	"\r\n"
	"uniform highp mat4  MVPMatrix;\t\t// model view projection transformation\r\n"
	"uniform highp vec3  LightPosModel;\t// Light position (point light) in model space\r\n"
	"\r\n"
	"varying lowp vec3  LightVec;\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * inVertex;\r\n"
	"\t\r\n"
	"\t// Calculate light direction from light position in model space\r\n"
	"\t// You can skip this step for directional lights\r\n"
	"\thighp vec3 lightDirection = normalize(LightPosModel - vec3(inVertex));\r\n"
	"\t\r\n"
	"\t// transform light direction from model space to tangent space\r\n"
	"\thighp vec3 bitangent = cross(inNormal, inTangent);\r\n"
	"\thighp mat3 tangentSpaceXform = mat3(inTangent, inNormal, bitangent);\r\n"
	"\tLightVec = lightDirection * tangentSpaceXform;\r\n"
	"\t\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"}\r\n";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 903);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0xcb2b4dbe,0x35050100,0x901,0xf121629f,0x0,0x0,0x20040000,0x0,0x4000200,0x0,0x19000000,0x203,0x0,0x2010000,0x1000028,0x0,0x9e020000,0x55535020,0x17,0x292,0x1,0x0,0xc,0x0,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x5000e,0x0,0x140000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x110000,0xffffffff,0x140000,0x5678000e,0x10000,0x0,0x10000,0x10001,0x10000,0x20002,0x10000,0x30003,0x10000,0x40004,0x10000,0x50005,0x10000,0x60006,0x10000,
0x70007,0x10000,0x80008,0x10000,0x90009,0x10000,0xa000a,0x10000,0xb000b,0x10000,0xc000c,0x10000,0xd000d,0x10000,0xe000e,0x10000,0xf000f,0x10000,0x100010,0x10000,0x110011,0x10000,0x120012,0x40000,0x3f000000,0x13,0x377f,0x4,0x20011,0x90000,0x80010000,0x80018001,0x8001,0x0,0x0,0x0,0x0,0x0,0x0,0x70201a1a,0xa21084,0x71609a1c,0x821086,0xe04102,0x801402,0xa0e2c587,0x801006,0x80000380,0x8801240,0x1082c030,0x811004,0x90e184b0,0x811006,0xa0614507,0x80100c,0xa0e00600,0x28a11001,0x2,0x17,0x80008002,0x800280f7,0x0,0x0,0x4,
0x10000,0x10001,0x10001,0x10001,0x10001,0x1,0x10000,0x1,0x0,0x10001,0xf7020000,0x200,0x700fa10,0x10026160,0x822883,0x60200e0,0x8038ab,0x1002e1a0,0x50b2883,0x606f180,0x470f3888,0x606f0e0,0x89133882,0x606f0e0,0xcb173882,0x205f000,0x60d38a2,0x605f020,0x48113898,0x606f000,0x8a153882,0x606f000,0xcc193882,0x605f060,0xce8b38b2,0xc005e042,0x1b038a0,0x10061043,0x50c0081,0x606a001,0x840038ab,0x100eb001,0x42810081,0x1006b023,0x3010081,0x1001a0a1,0x40020080,0x1006a043,0x28c0080,0x606a022,0x48038ab,0x100eb021,0x44810081,0x1006b003,0x5000081,0x1001a081,0x600a0,0x18000000,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0x3f,0x0,0x0,0x6c670900,0x736f505f,0x6f697469,0x100006e,0x505,0x1000001,0x40000,0x4d00000f,0x614d5056,0x78697274,0x16000000,0x1000003,0x10000,0xffff1000,0x6e690000,0x74726556,0x7865,0x40500,0x100,0x4000001,0xf00,0x6867694c,0x736f5074,0x65646f4d,0x6c,0x304,0x1000001,0x41000,0x69000007,0x726f4e6e,0x6c616d,0x4040000,0x10000,0x4000100,0x70004,0x546e6900,0x65676e61,0x746e,0x40400,0x100,0x4080001,0x700,0x6867694c,0x63655674,0x4000000,0x1000005,
0x10000,0x7000300,0x65540000,0x6f6f4378,0x6472,0x50300,0x100,0x2040001,0x300,0x65546e69,0x6f6f4378,0x6472,0x40300,0x100,0x40c0001,0x300,0x0,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 1088);

// ******** End: VertShader.vsc ********

