// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsh ********

// File data
static const char _FragShader_fsh[] = 
	"uniform sampler2D  sThicknessTex;\r\n"
	"\r\n"
	"uniform highp float  MinThickness;\r\n"
	"uniform highp float  MaxVariation;\r\n"
	"\r\n"
	"varying mediump float  CosViewAngle;\r\n"
	"varying mediump float  LightIntensity;\r\n"
	"varying mediump vec2   TexCoord;\r\n"
	"\r\n"
	"// We use wave numbers (k) for the iridescence effect, given as\r\n"
	"//   k =  2 * pi / wavelength in nm.\r\n"
	"const highp float  PI = 3.141592654;\r\n"
	"const highp vec3   cRgbK = 2.0 * PI * vec3(1.0/475.0, 1.0/510.0, 1.0/650.0);\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\thighp float thickness = texture2D(sThicknessTex, TexCoord).r * MaxVariation + MinThickness;\r\n"
	"\thighp float delta = (thickness / LightIntensity) + (thickness / CosViewAngle);\r\n"
	"\tlowp vec3 color = cos(delta * cRgbK) * LightIntensity;\r\n"
	"\tgl_FragColor = vec4(color, 1.0);\r\n"
	"}";

// Register FragShader.fsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsh("FragShader.fsh", _FragShader_fsh, 730);

// ******** End: FragShader.fsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsc ********

// File data
A32BIT _FragShader_fsc[] = {
0x10fab438,0x6892a47,0x35050100,0x901,0xf121629f,0x0,0x0,0xb080000,0x1000000,0x4000100,0x0,0x38000000,0x20202,0x0,0x2020100,0x2,0x1,0x3c030000,0x55535020,0x17,0x330,0x1,0x0,0x48,0x0,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0xa0003,0x0,0x60003,0x0,0x0,0x0,0x0,0xfffc0000,0x3,0x10004,0x0,0x110000,0xffffffff,0x60000,0x56780000,0x40000,0x20000,0x10001,0x0,0x1,0x40000,0x30000,0x10001,0x30001,0x0,0x70001,0x1,0x170001,0x2,0x80001,
0x3,0x90001,0x4,0xa0001,0x5,0x4,0x50011,0x10000,0x80010000,0x80018001,0x8001,0x0,0x0,0x10000,0x6880001,0x30003,0x30003,0x20001,0x40003,0x10001,0x10001,0x0,0x0,0xa0001,0x20001,0x2,0x1a,0x80018001,0x80018001,0x0,0x0,0x0,0x0,0x10000,0x10001,0x10001,0x10001,0x10001,0x10001,0x10001,0x10001,0x0,0x0,0x0,0xf000448a,0x801004,0x80200000,0x8801002,0x80400100,0x8801002,0xa0400101,0x38a00002,0xf020860d,0x38ab0606,0xe0200000,0x28831002,0xd000458e,0x811004,0x0,0x801600,0x50001322,0x831008,0xb020010e,0x38988602,
0xe0400080,0x28831002,0xd020458e,0x811004,0x200081,0x801600,0x50205322,0x831008,0x5020942a,0x831026,0x9020412c,0x81100e,0x9020410e,0x811006,0x80204080,0x38888602,0xe0600000,0x28831000,0xe0400080,0x28831002,0xd040458e,0x811004,0x400102,0x801600,0x50809322,0x831008,0x5020942a,0x831026,0x9020412c,0x81100e,0x9040410e,0x811004,0x2,0x2,0x40ce40f4,0x800040cd,0x0,0x0,0x4,0xf4cecd00,0xfa10000e,0x10000030,0xa12000,0x2,0x2,0x80028001,0x80028000,0x0,0x0,0x4,0x1020002,0xfa100000,0x40405a01,0xa21000,0x2,0x2,0x80018001,0x80008000,0x0,0x0,0x4,0x1010000,0xfa100000,0x60e09a00,
0xa21280,0x2,0xa,0x80ff8002,0x80008000,0x0,0x0,0x4,0x0,0x0,0x0,0x100012,0x2ff0000,0xfa100000,0x10410230,0x811000,0x5020942a,0x831022,0x1020412c,0x81100e,0x10a0410e,0x811004,0x10814230,0xa11000,0x40819a06,0x821000,0x61211a00,0x821280,0x40388,0x40801c3e,0x100404b4,0x40811c26,0x6,0x6c030000,0x55535020,0x17,0x360,0x1,0x0,0x148,0x0,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x90003,0x0,0x60003,0x0,0x0,0x0,0x0,0xfffc0000,0x1,0x10004,0x0,0x110000,0xffffffff,0x60000,
0x56780000,0x40000,0x20000,0x10001,0x0,0x1,0x40000,0x30000,0x10001,0x30001,0x0,0x70001,0x1,0x170001,0x2,0x80001,0x3,0x90001,0x4,0xa0001,0x5,0x4,0x50011,0x10000,0x80010000,0x80018001,0x8001,0x0,0x0,0x10000,0x6880001,0x10001,0x10001,0x10000,0x30002,0x10001,0x10001,0x0,0x0,0x90001,0x20001,0x2,0x9,0x80018001,0x80018001,0x0,0x0,0x0,0x0,0x0,0x0,0x48a0000,0x1000f000,0x80,0x10008020,0x1000880,0x10008040,0x1010880,0x0,0x63038a0,0x1000d020,0x6b00081,0x1000d040,0x458e0081,
0x1000d020,0x858e0081,0x1000d040,0x810081,0x16000020,0x200a0,0x20000,0x80010000,0x80008001,0x8000,0x0,0x40000,0x0,0x101,0x5322fa10,0x100850a0,0x200a3,0x30000,0x80020000,0x80018001,0x8000,0x0,0x40000,0x0,0x2010100,0xfa100000,0xd0200730,0x811000,0x100142b0,0xa11000,0x2,0xf,0x800180fe,0x80018001,0x0,0x0,0x4,0x0,0x0,0x0,0x0,0x0,0x10001,0x1010001,0xfe01,0x458efa10,0x1000d060,0x1830081,0x16000060,0xd3220080,0x10085080,0x142a0083,0x10205020,0x402c0083,0x10081020,0x400e0081,0x100010e0,0xc2b00081,0x10001021,0x942a0081,0x10205000,0x12c0083,0x10081000,0x10e0081,
0x10001060,0x41860081,0x86000020,0x38ab,0x1000e060,0xc2042883,0x86000040,0x3898,0x1000e0a0,0x228a3,0x20000,0x80010000,0x80008001,0x8001,0x0,0x40000,0x10000,0x101,0x9a02fa10,0x10004000,0x200a2,0x20000,0x80010000,0x80008001,0x8000,0x0,0x40000,0x0,0x101,0x1a00fa10,0x12806000,0x200a2,0x90000,0x80010000,0x800080fc,0x8000,0x0,0x40000,0x0,0x0,0x0,0x100012,0x1fc0000,0xfa100000,0x5041542a,0x831020,0x104082ac,0x811008,0x1100828e,0x811000,0x10820230,0xa11000,0x40415a05,0x821000,0x60409a00,0x821280,0x40080,0x40801c18,0x10040134,0x40811c24,0x6,0x2000,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x583c0000,0x493c3db9,0x1e3cb5d9,0xfc5f,0x0,0x0,0x0,0x803f0000,0x0,0x0,0x0,0x3f0000,0x0,0x0,0x0,0x223e0000,0x83f9,0x0,0x0,0xc9400000,0xdb0f,0x0,0x0,0x49c00000,0x600db0f,0x69685473,0x656e6b63,0x65547373,0x78,0x318,0x2000001,0x10000,0x54000001,0x6f437865,0x64726f,0x5030000,0x10000,0x100,0x30002,0x78614d00,0x69726156,0x6f697461,0x6e,0x302,0x1000001,0x40300,0x4d000001,0x68546e69,0x6e6b6369,0x737365,0x3020000,0x10000,0x7000100,0x10004,0x67694c00,0x6e497468,0x736e6574,0x797469,0x5020000,
0x10000,0x4000100,0x10001,0x736f4300,0x77656956,0x6c676e41,0x65,0x502,0x1000001,0x10800,0x1,
};

// Register FragShader.fsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsc("FragShader.fsc", _FragShader_fsc, 2091);

// ******** End: FragShader.fsc ********

