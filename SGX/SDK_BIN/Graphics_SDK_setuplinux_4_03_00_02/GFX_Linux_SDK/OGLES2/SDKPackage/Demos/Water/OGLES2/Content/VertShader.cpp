// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"attribute highp vec3  inVertex;\r\n"
	"\r\n"
	"uniform highp mat4  ModelViewMatrix;\r\n"
	"uniform highp mat4  MVPMatrix;\r\n"
	"uniform highp vec3  EyePosition;\t\t// Eye (aka Camera) positon in model-space\r\n"
	"uniform mediump vec2 BumpTranslation0;\r\n"
	"uniform mediump vec2 BumpScale0;\r\n"
	"uniform mediump vec2 BumpTranslation1;\r\n"
	"uniform mediump vec2 BumpScale1;\r\n"
	"\r\n"
	"uniform highp float PerturbScale;\r\n"
	" \r\n"
	"varying mediump vec2 BumpCoord0;\r\n"
	"varying mediump vec2 BumpCoord1;\r\n"
	"varying mediump vec3\tWaterToEye;\r\n"
	"varying mediump float\tWaterToEyeLength;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Convert each vertex into projection-space and output the value\r\n"
	"\thighp vec4 vInVertex = vec4(inVertex, 1.0);\r\n"
	"\tgl_Position = MVPMatrix * vInVertex;\r\n"
	"\r\n"
	"\t// The texture coordinate is calculated this way to reduce the number of attributes needed\r\n"
	"\tmediump vec2 vTexCoord = inVertex.xz;\r\n"
	"\r\n"
	"\t// Scale and translate texture coordinates used to sample the normal map - section 2.2 of white paper\r\n"
	"\tBumpCoord0 = vTexCoord.xy * BumpScale0;\r\n"
	"\tBumpCoord0 += BumpTranslation0;\r\n"
	"\t\r\n"
	"\tBumpCoord1 = vTexCoord.xy * BumpScale1;\r\n"
	"\tBumpCoord1 += BumpTranslation1;\r\n"
	"\t\r\n"
	"\t/* \t\r\n"
	"\t\tThe water to eye vector is used to calculate the Fresnel term\r\n"
	"\t\tand to fade out perturbations based on distance from the viewer\r\n"
	"\t*/\r\n"
	"\tWaterToEye = EyePosition - inVertex;\r\n"
	"\tWaterToEyeLength = length(WaterToEye);\r\n"
	"}\r\n";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 1311);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0x902247e1,0x35050100,0x901,0xf121629f,0x0,0x0,0xe9040000,0x0,0x4000200,0x0,0x79000000,0x2020203,0x0,0x2020000,0x202,0x0,0xac020000,0x55535020,0x17,0x2a0,0x1,0x0,0xc,0x0,0x3,0x6d,0x1,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x20003,0x0,0x1b0000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x110000,0xffffffff,0x1b0000,0x56780003,0x10000,0x4,0x10000,0x10005,0x10000,0x20006,0x10000,0x30007,0x10000,0x40008,0x10000,0x50009,0x10000,0x6000a,0x10000,
0x7000b,0x10000,0x8000c,0x10000,0x9000d,0x10000,0xa000e,0x10000,0xb000f,0x10000,0xc0010,0x10000,0xd0011,0x10000,0xe0012,0x10000,0xf0013,0x10000,0x100014,0x10000,0x110015,0x10000,0x120018,0x10000,0x130019,0x10000,0x14001c,0x10000,0x15001d,0x10000,0x160020,0x10000,0x170021,0x10000,0x180024,0x10000,0x190025,0x10000,0x1a0026,0x70000,0x40000,0x110000,0x2,0xa,0x80018001,0x80018001,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xe0000e00,0x28811000,0xc0e00d00,0x801005,0xe0000e80,0x28811000,0xc1008d80,0x801005,0xe0001000,0x28811000,0xc1200f00,
0x801005,0xe0001080,0x28811000,0xc1408f80,0x801005,0x70801a22,0xa22085,0x60000200,0x28a11000,0x2,0x12,0x80018000,0x80048004,0x0,0x0,0x4,0x0,0x0,0x0,0x10000,0x10001,0x10001,0x1,0x0,0x10404,0xfa100000,0x50000230,0x811000,0x40004280,0x801000,0x60200300,0x28811000,0x40004300,0x801000,0x0,0x8801240,0x1600000,0x8801001,0x60200700,0x28831000,0xf000050b,0x10a82204,0x70001a16,0x821001,0xf000060d,0x38980606,0x70201a17,0x821005,0xf0004811,0x38820606,0xf0008a15,0x38a20206,0xe0200080,0x28831002,0xd0000c0e,0x811206,0x70605a19,0x821005,0x60404180,0x801001,0x6,0x2c00,0x0,0x0,
0x803f0000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f0000,0x3f0000,0x0,0x0,0xc000000,0x65566e69,0x78657472,0x4000000,0x1000004,0x10000,0x7000400,0x6c670000,0x736f505f,0x6f697469,0x100006e,0x505,0x1000001,0x40000,0x4d00000f,0x614d5056,0x78697274,0x16000000,0x1000003,0x10000,0xffff1004,0x75420000,0x6f43706d,
0x3064726f,0x3000000,0x1000005,0x10000,0x3000204,0x75420000,0x6353706d,0x30656c61,0x3000000,0x1000003,0x10000,0x3000414,0x75420000,0x7254706d,0x6c736e61,0x6f697461,0x306e,0x30300,0x100,0x4180001,0x300,0x706d7542,0x726f6f43,0x3164,0x50300,0x100,0x2080001,0x300,0x706d7542,0x6c616353,0x3165,0x30300,0x100,0x41c0001,0x300,0x706d7542,0x6e617254,0x74616c73,0x316e6f69,0x3000000,0x1000003,0x10000,0x3000420,0x79450000,0x736f5065,0x6f697469,0x6e,0x304,0x1000001,0x42400,0x57000007,0x72657461,0x79456f54,0x65,0x504,0x1000001,0x30000,0x57000007,0x72657461,0x79456f54,0x6e654c65,0x687467,0x5020000,0x10000,
0xc000100,0x10001,0x0,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 1289);

// ******** End: VertShader.vsc ********

